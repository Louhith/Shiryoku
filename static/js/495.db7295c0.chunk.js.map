{"version":3,"file":"static/js/495.db7295c0.chunk.js","mappings":"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","sources":["utils/data.ts","components/Home/Resources/Tags.tsx","components/Home/Resources/Search.tsx","components/Home/Resources/ResourceCard.tsx","components/Home/Resources/AllResources.tsx","pages/Home/Resources.tsx"],"sourcesContent":["/**\r\n * Fetch in-app Data Util\r\n */\r\n\r\n// Dependencies\r\nimport allTags from '../data/tags.json';\r\nimport allResources from '../data/resources.json';\r\nimport allNotifications from '../data/notifications.json';\r\n\r\n// Get Read Notifications from Local Storage, parse it if it's there\r\n// If not there, then return an empty array.\r\nconst readNotifications: string[] = localStorage.getItem('readNotifications')\r\n\t? JSON.parse(localStorage.getItem('readNotifications') || '{}')\r\n\t: [];\r\n\r\ninterface ResourcesUtility {\r\n\tgetResources: (\r\n\t\tpage?: number,\r\n\t\tlimit?: number,\r\n\t\ttags?: Tags,\r\n\t\tsearch?: string\r\n\t) => Promise<Resource[]>;\r\n\tgetSingleResource: (name: string) => Promise<Resource> | any;\r\n\tgetTotalPages: () => Promise<number>;\r\n}\r\n\r\ninterface TagUtility {\r\n\tgetTags: () => Promise<Tags>;\r\n}\r\n\r\ninterface NotificationUtility {\r\n\tgetAllNotification: () => Promise<Notification[]>;\r\n\tupdateReadNotifications: (\r\n\t\tnotificationId: string\r\n\t) => Promise<string | Error | undefined>;\r\n}\r\n\r\n/**\r\n * Data Utility Class\r\n */\r\nclass Data {\r\n\tstatic get Resources() {\r\n\t\tconst resourceUtility = {} as ResourcesUtility;\r\n\r\n\t\t/**\r\n\t\t * @description Get all resources in paginated manner\r\n\t\t * @param {number} page The current page\r\n\t\t * @param {number} limit The amount of items to display per page\r\n\t\t * @param {string[]} tags search for tags\r\n\t\t * @param {string} search search for resource by name, description or url\r\n\t\t * @returns {Resource[]} Array of resources\r\n\t\t */\r\n\t\tresourceUtility.getResources = async (\r\n\t\t\tpage = 1,\r\n\t\t\tlimit = 20,\r\n\t\t\ttags = [],\r\n\t\t\tsearch?: string\r\n\t\t) => {\r\n\t\t\tlet resources: Resource[] = allResources;\r\n\t\t\tif (search) {\r\n\t\t\t\tresources = resources.filter((resource) => {\r\n\t\t\t\t\tsearch = search!.replace(/([^a-zA-z0-9]+)/g, '');\r\n\t\t\t\t\tconst searchRegExp = new RegExp(search, 'ig');\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\tsearchRegExp.test(resource.name) ||\r\n\t\t\t\t\t\tsearchRegExp.test(resource.description) ||\r\n\t\t\t\t\t\tsearchRegExp.test(resource.url)\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (tags?.length > 0) {\r\n\t\t\t\tresources = resources.filter((resource) => {\r\n\t\t\t\t\treturn resource.tags.find((tag) => tags.includes(tag));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn resources.slice((page - 1) * limit, page * limit);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * @description Get's a single resources by it's name\r\n\t\t * @param {string} name name of the page looking for\r\n\t\t * @returns {Resource} Matching Resource\r\n\t\t */\r\n\t\tresourceUtility.getSingleResource = async (name: string) => {\r\n\t\t\treturn allResources.find((resource) => {\r\n\t\t\t\tconst url = new URL(resource.url).hostname.split('.').shift();\r\n\t\t\t\treturn url === name;\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tresourceUtility.getTotalPages = async () => {\r\n\t\t\treturn Math.ceil(allResources.length / 20);\r\n\t\t};\r\n\r\n\t\treturn resourceUtility;\r\n\t}\r\n\r\n\tstatic get Tags() {\r\n\t\tconst tagUtility = {} as TagUtility;\r\n\r\n\t\t/**\r\n\t\t * @description Get all tags\r\n\t\t * @returns {Tags} Tags\r\n\t\t */\r\n\t\ttagUtility.getTags = async () => {\r\n\t\t\treturn allTags;\r\n\t\t};\r\n\r\n\t\treturn tagUtility;\r\n\t}\r\n\r\n\tstatic get Notifications() {\r\n\t\tconst notificationUtility = {} as NotificationUtility;\r\n\r\n\t\t/**\r\n\t\t * @description Compares read notifications and new notifications,\r\n\t\t * returns true if already read and false if not for *read* property.\r\n\t\t * @returns {array} Array of All notifications\r\n\t\t */\r\n\t\tnotificationUtility.getAllNotification = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tallNotifications.forEach((notification: Notification | any) => {\r\n\t\t\t\t\tnotification.read = false;\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\treadNotifications.find(\r\n\t\t\t\t\t\t\t(readNotification) =>\r\n\t\t\t\t\t\t\t\treadNotification === notification.id\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tnotification.read = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn allNotifications as Notification[];\r\n\t\t\t} catch (error) {\r\n\t\t\t\treturn Promise.reject(error);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * @description Update notification as read using notification Id\r\n\t\t * @param {string} notificationId notification Id to be added to read notifications\r\n\t\t * @returns {string} 'Notification marked as read!'\r\n\t\t */\r\n\t\tnotificationUtility.updateReadNotifications = async (\r\n\t\t\tnotificationId: string\r\n\t\t) => {\r\n\t\t\ttry {\r\n\t\t\t\tconst readNotification: any = allNotifications.find(\r\n\t\t\t\t\t(notification: any) => notification.id === notificationId\r\n\t\t\t\t);\r\n\t\t\t\tif (!readNotification)\r\n\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t'Notification with give Id does not exist!'\r\n\t\t\t\t\t);\r\n\t\t\t\tif (readNotifications.find((noti) => noti === notificationId))\r\n\t\t\t\t\treturn;\r\n\t\t\t\treadNotifications.push(readNotification.id);\r\n\t\t\t\tlocalStorage.setItem(\r\n\t\t\t\t\t'readNotifications',\r\n\t\t\t\t\tJSON.stringify(readNotifications)\r\n\t\t\t\t);\r\n\t\t\t\treturn 'Notification marked as read!';\r\n\t\t\t} catch (error) {\r\n\t\t\t\treturn Promise.reject(error);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn notificationUtility;\r\n\t}\r\n}\r\n\r\nexport default Data;\r\n","/**\r\n * Tags Component\r\n */\r\n\r\n// Dependencies\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Data from '../../../utils/data';\r\n\r\nimport { Box, Typography, Chip, styled, Stack } from '@mui/material';\r\nimport CategoryIcon from '@mui/icons-material/Category';\r\n\r\nimport {\r\n\tupdateSelectedTags,\r\n\tclearAllSelectedTags,\r\n\tupdateCurrentResources,\r\n} from '../../../store/features/app';\r\nimport { useAppDispatch } from '../../../store';\r\nimport { RootState } from '../../../store';\r\n\r\nconst Tags = () => {\r\n\tconst dispatch = useAppDispatch();\r\n\tconst { selectedTags } = useSelector((state: RootState) => state.app);\r\n\tconst [tags, setTags] = useState<Tags>([]);\r\n\r\n\tconst handleSelectTag = (tag: string) => {\r\n\t\tdispatch(updateSelectedTags(tag));\r\n\t};\r\n\r\n\tconst handleDeleteTag = (tag: string) => () => {\r\n\t\tdispatch(updateSelectedTags(tag));\r\n\t};\r\n\r\n\tconst handleClearAllSelectedTags = () => {\r\n\t\tdispatch(clearAllSelectedTags());\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst handleFetchTags = async () => {\r\n\t\t\tconst data = await Data.Tags.getTags();\r\n\t\t\tsetTags(data);\r\n\t\t};\r\n\t\tif (tags.length === 0) handleFetchTags();\r\n\t}, [tags]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst handleResourcesUpdate = async () => {\r\n\t\t\tconst data = await Data.Resources.getResources(\r\n\t\t\t\tundefined,\r\n\t\t\t\tundefined,\r\n\t\t\t\tselectedTags\r\n\t\t\t);\r\n\t\t\tdispatch(updateCurrentResources(data));\r\n\t\t};\r\n\t\tif (selectedTags.length >= 0) handleResourcesUpdate();\r\n\t}, [selectedTags, dispatch]);\r\n\r\n\tconst chitActiveStyle = {\r\n\t\tbackgroundColor: '#0288d180',\r\n\t\t'&:hover': {\r\n\t\t\tbackgroundColor: '#0288d1 !important',\r\n\t\t},\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Box>\r\n\t\t\t<Typography mt={2} fontWeight={600} variant='body2'>\r\n\t\t\t\t<CategoryIcon sx={{ fontSize: 'inherit' }} /> Tags{' '}\r\n\t\t\t\t<Typography component='span' variant='subtitle2'>\r\n\t\t\t\t\t| Click to filter resources{' '}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t{selectedTags.length > 0 && (\r\n\t\t\t\t\t<Chip\r\n\t\t\t\t\t\tlabel='Clear All Tags'\r\n\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\tcolor='error'\r\n\t\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\t\tsx={{ transform: 'scale(0.8)' }}\r\n\t\t\t\t\t\tonClick={handleClearAllSelectedTags}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</Typography>\r\n\t\t\t<ChipContainer>\r\n\t\t\t\t{tags.length > 0 &&\r\n\t\t\t\t\ttags.map((tag) => (\r\n\t\t\t\t\t\t<Chip\r\n\t\t\t\t\t\t\tlabel={tag}\r\n\t\t\t\t\t\t\tkey={tag}\r\n\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\t\t\t\ttransition: 'all 200ms',\r\n\t\t\t\t\t\t\t\t'&:hover': {},\r\n\t\t\t\t\t\t\t\t'@media(min-width: 800px)': {\r\n\t\t\t\t\t\t\t\t\tmargin: '0.1em',\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t...(selectedTags.includes(tag)\r\n\t\t\t\t\t\t\t\t\t? chitActiveStyle\r\n\t\t\t\t\t\t\t\t\t: {}),\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\t\t\tonClick={() => handleSelectTag(tag)}\r\n\t\t\t\t\t\t\tonDelete={\r\n\t\t\t\t\t\t\t\t!selectedTags.includes(tag)\r\n\t\t\t\t\t\t\t\t\t? undefined\r\n\t\t\t\t\t\t\t\t\t: handleDeleteTag(tag)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t</ChipContainer>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nconst ChipContainer = styled(Stack)({\r\n\tflexWrap: 'wrap',\r\n\tflexDirection: 'row',\r\n\tgap: 2,\r\n\tmarginTop: 4,\r\n\tmaxHeight: '200px',\r\n\toverflow: 'auto',\r\n\tpadding: 1,\r\n\t'&::-webkit-scrollbar': {\r\n\t\twidth: '0.2em',\r\n\t},\r\n\t'&::-webkit-scrollbar-track': {\r\n\t\tboxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)',\r\n\t\twebkitBoxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)',\r\n\t},\r\n\t'&::-webkit-scrollbar-thumb': {\r\n\t\tbackgroundColor: 'rgba(0,0,0,.1)',\r\n\t\tborderRadius: '4px',\r\n\t},\r\n});\r\n\r\nexport default Tags;\r\n","/**\r\n * Search Field\r\n */\r\n\r\n// Dependencies\r\nimport React, { useState, useEffect } from 'react';\r\nimport Data from '../../../utils/data';\r\n\r\nimport { Box, TextField, Link } from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\nimport { updateCurrentResources } from '../../../store/features/app';\r\nimport { useAppDispatch } from '../../../store';\r\n\r\nconst Search = () => {\r\n\tconst dispatch = useAppDispatch();\r\n\tconst [search, setSearch] = useState('');\r\n\r\n\tuseEffect(() => {\r\n\t\tconst handleResourcesUpdate = async (value?: string) => {\r\n\t\t\tconst data = await Data.Resources.getResources(\r\n\t\t\t\tundefined,\r\n\t\t\t\tundefined,\r\n\t\t\t\tundefined,\r\n\t\t\t\tvalue\r\n\t\t\t);\r\n\t\t\tdispatch(updateCurrentResources(data));\r\n\t\t};\r\n\t\tif (search) handleResourcesUpdate(search);\r\n\t\tif (!search) handleResourcesUpdate();\r\n\t}, [search, dispatch]);\r\n\r\n\treturn (\r\n\t\t<Box mb={2}>\r\n\t\t\t<TextField\r\n\t\t\t\ttype='text'\r\n\t\t\t\tvariant='outlined'\r\n\t\t\t\tfullWidth\r\n\t\t\t\tlabel='Search'\r\n\t\t\t\tplaceholder='Search for awesome resources...'\r\n\t\t\t\tvalue={search}\r\n\t\t\t\tonChange={(e) => setSearch(e.target.value)}\r\n\t\t\t\tInputProps={{\r\n\t\t\t\t\tendAdornment: <SearchIcon />,\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t{search && (\r\n\t\t\t\t<Link\r\n\t\t\t\t\tmt={0}\r\n\t\t\t\t\tfontSize={8}\r\n\t\t\t\t\tsx={{ cursor: 'pointer' }}\r\n\t\t\t\t\tonClick={() => setSearch('')}\r\n\t\t\t\t>\r\n\t\t\t\t\tClear search\r\n\t\t\t\t</Link>\r\n\t\t\t)}\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default Search;\r\n","/**\r\n * Resource Card\r\n */\r\n\r\n// Dependencies\r\nimport React, { FC, PropsWithChildren } from 'react';\r\n\r\nimport {\r\n\tTooltip,\r\n\tPaper,\r\n\tstyled,\r\n\tGrid,\r\n\tAvatar,\r\n\tBox,\r\n\tIconButton,\r\n\tTypography,\r\n\tStack,\r\n\tChip,\r\n} from '@mui/material';\r\nimport ShareIcon from '@mui/icons-material/Share';\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\nimport LanguageIcon from '@mui/icons-material/Language';\r\n\r\nimport { useAppDispatch } from '../../../store';\r\nimport { showSnackbar } from '../../../store/features/app';\r\n\r\ninterface ResourceCardProps extends PropsWithChildren, Resource {}\r\n\r\nconst ResourceCard: FC<ResourceCardProps> = (props) => {\r\n\tconst dispatch = useAppDispatch();\r\n\r\n\tconst handleCopyToClipboard = async () => {\r\n\t\ttry {\r\n\t\t\tawait navigator.clipboard.writeText(props.url);\r\n\t\t\tdispatch(\r\n\t\t\t\tshowSnackbar({\r\n\t\t\t\t\tmessage: `${props.name} URL Copied to Clipboard!`,\r\n\t\t\t\t\ttype: 'success',\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tdispatch(\r\n\t\t\t\tshowSnackbar({\r\n\t\t\t\t\tmessage: `Unable to copy URL, try again later.`,\r\n\t\t\t\t\ttype: 'error',\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleShareResource = async () => {\r\n\t\ttry {\r\n\t\t\tconst shareData = {\r\n\t\t\t\turl: props.url,\r\n\t\t\t\ttitle: `${props.name} from Shiryoku by Kunal Keshan`,\r\n\t\t\t\ttext: props.description,\r\n\t\t\t};\r\n\r\n\t\t\tawait navigator.share(shareData);\r\n\t\t} catch (error) {}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ResourceContainer item xs={12} lg={5}>\r\n\t\t\t<ResourceBox elevation={3}>\r\n\t\t\t\t<Box\r\n\t\t\t\t\tdisplay='flex'\r\n\t\t\t\t\talignItems='center'\r\n\t\t\t\t\twidth='100%'\r\n\t\t\t\t\tflexWrap='wrap'\r\n\t\t\t\t>\r\n\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\ttitle='Click to Copy URL'\r\n\t\t\t\t\t\tsx={{ cursor: 'pointer !important' }}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Avatar\r\n\t\t\t\t\t\t\tsrc={props?.icon ?? props?.name}\r\n\t\t\t\t\t\t\tsx={{ mr: 2, cursor: 'pointer' }}\r\n\t\t\t\t\t\t\tonClick={handleCopyToClipboard}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tvariant='body1'\r\n\t\t\t\t\t\t\tfontWeight={600}\r\n\t\t\t\t\t\t\tmaxWidth='200px'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{props.name}\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\toverflow: 'hidden',\r\n\t\t\t\t\t\t\t\ttextOverflow: 'ellipsis',\r\n\t\t\t\t\t\t\t\twidth: '20ch',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\ttitle={props.description}\r\n\t\t\t\t\t\t\t\tarrow\r\n\t\t\t\t\t\t\t\tfollowCursor={true}\r\n\t\t\t\t\t\t\t\tplacement='bottom'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Typography variant='caption' noWrap>\r\n\t\t\t\t\t\t\t\t\t{props.description}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<LinksBox>\r\n\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\ttitle='Visit Website'\r\n\t\t\t\t\t\t\tarrow\r\n\t\t\t\t\t\t\tfollowCursor={true}\r\n\t\t\t\t\t\t\tplacement='bottom'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<IconButton href={props.url} target='_blank'>\r\n\t\t\t\t\t\t\t\t<LanguageIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t{props.github && (\r\n\t\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\t\ttitle='View Open Source Code'\r\n\t\t\t\t\t\t\t\tarrow\r\n\t\t\t\t\t\t\t\tfollowCursor={true}\r\n\t\t\t\t\t\t\t\tplacement='bottom'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\thref={props?.github}\r\n\t\t\t\t\t\t\t\t\ttarget='_blank'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<GitHubIcon />\r\n\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\t\ttitle={`Share ${props.name}`}\r\n\t\t\t\t\t\t\tarrow\r\n\t\t\t\t\t\t\tfollowCursor={true}\r\n\t\t\t\t\t\t\tplacement='bottom'\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<IconButton onClick={handleShareResource}>\r\n\t\t\t\t\t\t\t\t<ShareIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</LinksBox>\r\n\t\t\t\t</Box>\r\n\t\t\t\t<Stack direction='row' flexWrap='wrap' mt={2}>\r\n\t\t\t\t\t{props.tags.map((tag) => (\r\n\t\t\t\t\t\t<Chip\r\n\t\t\t\t\t\t\tlabel={tag}\r\n\t\t\t\t\t\t\tkey={tag}\r\n\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\tfontSize: '0.6rem',\r\n\t\t\t\t\t\t\t\tpadding: '0.1em 0.2em',\r\n\t\t\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\t\t\tmargin: '0.2em',\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Stack>\r\n\t\t\t</ResourceBox>\r\n\t\t</ResourceContainer>\r\n\t);\r\n};\r\n\r\nconst ResourceContainer = styled(Grid)({});\r\n\r\nconst ResourceBox = styled(Paper)({\r\n\tpadding: '1em',\r\n});\r\n\r\nconst LinksBox = styled(Box)({\r\n\tdisplay: 'flex',\r\n\talignItems: 'center',\r\n\tjustifyContent: 'center',\r\n\talignSelf: 'flex-end',\r\n\tmarginLeft: 'auto',\r\n});\r\n\r\nexport default ResourceCard;\r\n","/**\r\n * All Resources Container\r\n */\r\n\r\n// Dependencies\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Data from '../../../utils/data';\r\n\r\nimport {\r\n\tBox,\r\n\tstyled,\r\n\tStack,\r\n\tPagination,\r\n\tGrid,\r\n\tTypography,\r\n} from '@mui/material';\r\nimport ResourceCard from './ResourceCard';\r\n\r\nimport { updateCurrentResources } from '../../../store/features/app';\r\nimport { useAppDispatch } from '../../../store';\r\nimport { RootState } from '../../../store';\r\n\r\nconst AllResources = () => {\r\n\tconst dispatch = useAppDispatch();\r\n\tconst { currentResources } = useSelector((state: RootState) => state.app);\r\n\tconst [page, setPage] = useState({ page: 1, limit: 20, total: 0 });\r\n\r\n\tuseEffect(() => {\r\n\t\tconst handleGetTotalPages = async () => {\r\n\t\t\tconst data = await Data.Resources.getTotalPages();\r\n\t\t\tsetPage((prev) => {\r\n\t\t\t\treturn { ...prev, total: data };\r\n\t\t\t});\r\n\t\t};\r\n\t\tif (page.total === 0) handleGetTotalPages();\r\n\t}, [page.total]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst handleResourcesUpdate = async () => {\r\n\t\t\tconst data = await Data.Resources.getResources(\r\n\t\t\t\tpage.page,\r\n\t\t\t\tundefined\r\n\t\t\t);\r\n\t\t\tdispatch(updateCurrentResources(data));\r\n\t\t};\r\n\t\tif (currentResources.length === 0) handleResourcesUpdate();\r\n\t\telse if (page.page >= 1) handleResourcesUpdate();\r\n\t}, [page.page]);\r\n\r\n\tconst handlePageChange = (\r\n\t\tevent: React.ChangeEvent<unknown>,\r\n\t\tvalue: number\r\n\t) => {\r\n\t\tsetPage((prev) => {\r\n\t\t\treturn { ...prev, page: value };\r\n\t\t});\r\n\t};\r\n\treturn (\r\n\t\t<Main>\r\n\t\t\t<ResourceContainer\r\n\t\t\t\tcontainer\r\n\t\t\t\tspacing={1}\r\n\t\t\t\tgridTemplateColumns={{ xs: 2 }}\r\n\t\t\t>\r\n\t\t\t\t{currentResources?.length > 0 ? (\r\n\t\t\t\t\tcurrentResources.map((resource, index) => (\r\n\t\t\t\t\t\t<ResourceCard key={index} {...resource} />\r\n\t\t\t\t\t))\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t<Typography variant='h5' textAlign={'center'}>\r\n\t\t\t\t\t\t\tNo Resources Found for Selected Tags or Search. 😢\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t)}\r\n\t\t\t</ResourceContainer>\r\n\t\t\t<Stack spacing={2} mt={2}>\r\n\t\t\t\t<Pagination\r\n\t\t\t\t\tcount={page.total}\r\n\t\t\t\t\tpage={page.page}\r\n\t\t\t\t\tonChange={handlePageChange}\r\n\t\t\t\t/>\r\n\t\t\t</Stack>\r\n\t\t</Main>\r\n\t);\r\n};\r\n\r\nconst Main = styled(Box)({\r\n\twidth: '65%',\r\n\tpadding: '0.5em',\r\n\t'@media(max-width: 800px)': {\r\n\t\twidth: '100%',\r\n\t},\r\n});\r\n\r\nconst ResourceContainer = styled(Grid)({\r\n\tgap: 4,\r\n});\r\n\r\nexport default AllResources;\r\n","/**\r\n * Resources Page\r\n */\r\n\r\n// Dependencies\r\nimport React from 'react';\r\n\r\nimport { Typography, styled, Box, Divider } from '@mui/material';\r\n\r\nimport Tags from '../../components/Home/Resources/Tags';\r\nimport Search from '../../components/Home/Resources/Search';\r\nimport AllResources from '../../components/Home/Resources/AllResources';\r\n\r\nconst Resources = () => {\r\n\treturn (\r\n\t\t<Main>\r\n\t\t\t<Typography variant='h6' noWrap>\r\n\t\t\t\tResources{' '}\r\n\t\t\t\t<Typography variant='caption' component='span'>\r\n\t\t\t\t\tthat will blow your mind!\r\n\t\t\t\t</Typography>\r\n\t\t\t</Typography>\r\n\t\t\t<Divider variant='fullWidth' />\r\n\t\t\t<Container>\r\n\t\t\t\t<AllResources />\r\n\t\t\t\t<CtaBox id='cta'>\r\n\t\t\t\t\t<Search />\r\n\t\t\t\t\t<Divider variant='fullWidth' />\r\n\t\t\t\t\t<Tags />\r\n\t\t\t\t</CtaBox>\r\n\t\t\t</Container>\r\n\t\t</Main>\r\n\t);\r\n};\r\n\r\nconst Main = styled(Box)({\r\n\twidth: '100%',\r\n});\r\n\r\nconst Container = styled(Box)({\r\n\twidth: '100%',\r\n\theight: '100%',\r\n\tdisplay: 'flex',\r\n\tmarginTop: '1em',\r\n\tgap: '1em',\r\n\t'@media(max-width: 800px)': {\r\n\t\tflexDirection: 'column-reverse',\r\n\t},\r\n});\r\n\r\nconst CtaBox = styled(Box)({\r\n\twidth: '35%',\r\n\tborderRadius: '8px',\r\n\tbackground: '#e3f2fd',\r\n\tpadding: '1em',\r\n\theight: 'fit-content',\r\n\t'@media(max-width: 800px)': {\r\n\t\twidth: '100%',\r\n\t},\r\n\t'@media(min-width:800px)': {\r\n\t\tposition: 'sticky',\r\n\t\ttop: '100px',\r\n\t},\r\n});\r\n\r\nexport default Resources;\r\n"],"names":["readNotifications","localStorage","getItem","JSON","parse","Data","resourceUtility","getResources","page","limit","tags","search","resources","allResources","filter","resource","replace","searchRegExp","RegExp","test","name","description","url","length","find","tag","includes","slice","getSingleResource","URL","hostname","split","shift","getTotalPages","Math","ceil","tagUtility","getTags","allTags","notificationUtility","getAllNotification","allNotifications","notification","read","readNotification","id","Promise","reject","updateReadNotifications","notificationId","Error","noti","push","setItem","stringify","ChipContainer","styled","Stack","flexWrap","flexDirection","gap","marginTop","maxHeight","overflow","padding","width","boxShadow","webkitBoxShadow","backgroundColor","borderRadius","dispatch","useAppDispatch","selectedTags","useSelector","state","app","useState","setTags","handleDeleteTag","updateSelectedTags","useEffect","handleFetchTags","data","handleResourcesUpdate","undefined","updateCurrentResources","chitActiveStyle","Box","Typography","mt","fontWeight","variant","Category","sx","fontSize","component","Chip","label","size","color","transform","onClick","clearAllSelectedTags","map","cursor","transition","margin","handleSelectTag","onDelete","setSearch","value","mb","TextField","type","fullWidth","placeholder","onChange","e","target","InputProps","endAdornment","Link","ResourceContainer","Grid","ResourceBox","Paper","LinksBox","display","alignItems","justifyContent","alignSelf","marginLeft","props","handleCopyToClipboard","navigator","clipboard","writeText","showSnackbar","message","handleShareResource","shareData","title","text","share","item","xs","lg","elevation","Tooltip","Avatar","src","icon","mr","maxWidth","style","textOverflow","arrow","followCursor","placement","noWrap","IconButton","href","Language","github","GitHub","Share","direction","Main","currentResources","total","setPage","handleGetTotalPages","prev","container","spacing","gridTemplateColumns","index","textAlign","Pagination","count","event","Container","height","CtaBox","background","position","top","Divider"],"sourceRoot":""}