{"version":3,"file":"static/js/161.e38b8fdf.chunk.js","mappings":"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","sources":["utils/data.ts","pages/Home/Resources.tsx"],"sourcesContent":["/**\r\n * Fetch in-app Data Util\r\n */\r\n\r\n// Dependencies\r\nimport allTags from '../data/tags.json';\r\nimport allResources from '../data/resources.json';\r\nimport allNotifications from '../data/notifications.json';\r\n\r\n// Get Read Notifications from Local Storage, parse it if it's there\r\n// If not there, then return an empty array.\r\nconst readNotifications: string[] = localStorage.getItem('readNotifications')\r\n\t? JSON.parse(localStorage.getItem('readNotifications') || '{}')\r\n\t: [];\r\n\r\ninterface ResourcesUtility {\r\n\tgetResources: (\r\n\t\tpage?: number,\r\n\t\tlimit?: number,\r\n\t\ttags?: Tags,\r\n\t\tsearch?: string\r\n\t) => Promise<Resource[]>;\r\n\tgetSingleResource: (name: string) => Promise<Resource> | any;\r\n\tgetTotalPages: () => Promise<number>;\r\n}\r\n\r\ninterface TagUtility {\r\n\tgetTags: () => Promise<Tags>;\r\n}\r\n\r\ninterface NotificationUtility {\r\n\tgetAllNotification: () => Promise<Notification[]>;\r\n\tupdateReadNotifications: (\r\n\t\tnotificationId: string\r\n\t) => Promise<string | Error | undefined>;\r\n}\r\n\r\n/**\r\n * Data Utility Class\r\n */\r\nclass Data {\r\n\tstatic get Resources() {\r\n\t\tconst resourceUtility = {} as ResourcesUtility;\r\n\r\n\t\t/**\r\n\t\t * @description Get all resources in paginated manner\r\n\t\t * @param {number} page The current page\r\n\t\t * @param {number} limit The amount of items to display per page\r\n\t\t * @param {string[]} tags search for tags\r\n\t\t * @param {string} search search for resource by name, description or url\r\n\t\t * @returns {Resource[]} Array of resources\r\n\t\t */\r\n\t\tresourceUtility.getResources = async (\r\n\t\t\tpage = 1,\r\n\t\t\tlimit = 20,\r\n\t\t\ttags = [],\r\n\t\t\tsearch?: string\r\n\t\t) => {\r\n\t\t\tlet resources: Resource[] = allResources;\r\n\t\t\tconsole.log(search, tags, page, limit);\r\n\t\t\tif (search) {\r\n\t\t\t\tresources = resources.filter((resource) => {\r\n\t\t\t\t\tconst searchRegExp = new RegExp(search, 'ig');\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\tsearchRegExp.test(resource.name) ||\r\n\t\t\t\t\t\tsearchRegExp.test(resource.description) ||\r\n\t\t\t\t\t\tsearchRegExp.test(resource.url)\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (tags?.length > 0) {\r\n\t\t\t\tresources = resources.filter((resource) => {\r\n\t\t\t\t\treturn resource.tags.find((tag) => tags.includes(tag));\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\treturn resources.slice((page - 1) * limit, page * limit);\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * @description Get's a single resources by it's name\r\n\t\t * @param {string} name name of the page looking for\r\n\t\t * @returns {Resource} Matching Resource\r\n\t\t */\r\n\t\tresourceUtility.getSingleResource = async (name: string) => {\r\n\t\t\treturn allResources.find((resource) => {\r\n\t\t\t\tconst url = new URL(resource.url).hostname.split('.').shift();\r\n\t\t\t\treturn url === name;\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\tresourceUtility.getTotalPages = async () => {\r\n\t\t\treturn Math.ceil(allResources.length / 20);\r\n\t\t};\r\n\r\n\t\treturn resourceUtility;\r\n\t}\r\n\r\n\tstatic get Tags() {\r\n\t\tconst tagUtility = {} as TagUtility;\r\n\r\n\t\t/**\r\n\t\t * @description Get all tags\r\n\t\t * @returns {Tags} Tags\r\n\t\t */\r\n\t\ttagUtility.getTags = async () => {\r\n\t\t\treturn allTags;\r\n\t\t};\r\n\r\n\t\treturn tagUtility;\r\n\t}\r\n\r\n\tstatic get Notifications() {\r\n\t\tconst notificationUtility = {} as NotificationUtility;\r\n\r\n\t\t/**\r\n\t\t * @description Compares read notifications and new notifications,\r\n\t\t * returns true if already read and false if not for *read* property.\r\n\t\t * @returns {array} Array of All notifications\r\n\t\t */\r\n\t\tnotificationUtility.getAllNotification = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tallNotifications.forEach((notification: Notification | any) => {\r\n\t\t\t\t\tnotification.read = false;\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\treadNotifications.find(\r\n\t\t\t\t\t\t\t(readNotification) =>\r\n\t\t\t\t\t\t\t\treadNotification === notification.id\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tnotification.read = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn allNotifications as Notification[];\r\n\t\t\t} catch (error) {\r\n\t\t\t\treturn Promise.reject(error);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * @description Update notification as read using notification Id\r\n\t\t * @param {string} notificationId notification Id to be added to read notifications\r\n\t\t * @returns {string} 'Notification marked as read!'\r\n\t\t */\r\n\t\tnotificationUtility.updateReadNotifications = async (\r\n\t\t\tnotificationId: string\r\n\t\t) => {\r\n\t\t\ttry {\r\n\t\t\t\tconst readNotification: any = allNotifications.find(\r\n\t\t\t\t\t(notification: any) => notification.id === notificationId\r\n\t\t\t\t);\r\n\t\t\t\tif (!readNotification)\r\n\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t'Notification with give Id does not exist!'\r\n\t\t\t\t\t);\r\n\t\t\t\tif (readNotifications.find((noti) => noti === notificationId))\r\n\t\t\t\t\treturn;\r\n\t\t\t\treadNotifications.push(readNotification.id);\r\n\t\t\t\tlocalStorage.setItem(\r\n\t\t\t\t\t'readNotifications',\r\n\t\t\t\t\tJSON.stringify(readNotifications)\r\n\t\t\t\t);\r\n\t\t\t\treturn 'Notification marked as read!';\r\n\t\t\t} catch (error) {\r\n\t\t\t\treturn Promise.reject(error);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\treturn notificationUtility;\r\n\t}\r\n}\r\n\r\nexport default Data;\r\n","/**\r\n * Resources Page\r\n */\r\n\r\n// Dependencies\r\nimport React, { useEffect, useState, useMemo } from 'react';\r\n\r\nimport {\r\n\tTypography,\r\n\tstyled,\r\n\tBox,\r\n\tDivider,\r\n\tTextField,\r\n\tList,\r\n\tChip,\r\n\tStack,\r\n\tPagination,\r\n} from '@mui/material';\r\nimport CategoryIcon from '@mui/icons-material/Category';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\nimport Data from '../../utils/data';\r\n\r\nconst Resources = () => {\r\n\tconst [tags, setTags] = useState<Tags>([]);\r\n\tconst [resources, setResources] = useState<Resource[]>([]);\r\n\tconst [page, setPage] = useState({ page: 1, limit: 20, total: 0 });\r\n\tconst [selectedTags, setSelectedTags] = useState<Tags>([]);\r\n\tconst [search, setSearch] = useState('');\r\n\r\n\tuseMemo(() => {\r\n\t\tconst handleFetchResources = async () => {\r\n\t\t\tconst data = await Data.Resources.getResources(\r\n\t\t\t\tpage.page,\r\n\t\t\t\tpage.limit,\r\n\t\t\t\tselectedTags,\r\n\t\t\t\tsearch\r\n\t\t\t);\r\n\t\t\tsetResources(data);\r\n\t\t};\r\n\t\thandleFetchResources();\r\n\t}, [selectedTags, search, page]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst handleGetTotalPages = async () => {\r\n\t\t\tconst data = await Data.Resources.getTotalPages();\r\n\t\t\tsetPage((prev) => {\r\n\t\t\t\treturn { ...prev, total: data };\r\n\t\t\t});\r\n\t\t};\r\n\t\tif (page.total === 0) handleGetTotalPages();\r\n\t}, [page.total]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst handleFetchTags = async () => {\r\n\t\t\tconst data = await Data.Tags.getTags();\r\n\t\t\tsetTags(data);\r\n\t\t};\r\n\t\tif (tags.length === 0) handleFetchTags();\r\n\t}, [tags]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst handleFetchResources = async () => {\r\n\t\t\tconst data = await Data.Resources.getResources();\r\n\t\t\tsetResources(data);\r\n\t\t};\r\n\t\tif (resources.length === 0) handleFetchResources();\r\n\t}, [resources]);\r\n\r\n\tconst handleSelectTag = (tag: string) => {\r\n\t\tsetSelectedTags((prev) => {\r\n\t\t\tif (prev.includes(tag)) {\r\n\t\t\t\treturn prev.filter((item) => item !== tag);\r\n\t\t\t}\r\n\t\t\treturn [...prev, tag];\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleDeleteTag = (tag: string) => () => {\r\n\t\tsetSelectedTags((prev) => {\r\n\t\t\tif (!prev.includes(tag)) {\r\n\t\t\t\treturn [...prev, tag];\r\n\t\t\t}\r\n\t\t\treturn prev.filter((item) => item !== tag);\r\n\t\t});\r\n\t};\r\n\r\n\tconst clearAllSelectedTags = () => {\r\n\t\tsetSelectedTags([]);\r\n\t};\r\n\r\n\tconst handlePageChange = (\r\n\t\tevent: React.ChangeEvent<unknown>,\r\n\t\tvalue: number\r\n\t) => {\r\n\t\tsetPage((prev) => {\r\n\t\t\treturn { ...prev, page: value };\r\n\t\t});\r\n\t};\r\n\r\n\tconst chitActiveStyle = {\r\n\t\tbackgroundColor: '#0288d1',\r\n\t\t':hover': {\r\n\t\t\tbackgroundColor: '#0288d1',\r\n\t\t},\r\n\t};\r\n\r\n\tconst CallToActions = () => {\r\n\t\treturn (\r\n\t\t\t<CtaBox id='cta'>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tlabel='Search'\r\n\t\t\t\t\tplaceholder='Search for awesome resources...'\r\n\t\t\t\t\tvalue={search}\r\n\t\t\t\t\tonChange={(e) => setSearch(e.target.value)}\r\n\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\tendAdornment: <SearchIcon />,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tsx={{ mb: 2 }}\r\n\t\t\t\t/>\r\n\t\t\t\t<Divider variant='fullWidth' />\r\n\t\t\t\t<Typography mt={2} fontWeight={600} variant='body2'>\r\n\t\t\t\t\t<CategoryIcon sx={{ fontSize: 'inherit' }} /> Tags{' '}\r\n\t\t\t\t\t<Typography component='span' variant='subtitle2'>\r\n\t\t\t\t\t\t| Click to filter resources{' '}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t{selectedTags.length > 0 && (\r\n\t\t\t\t\t\t<Chip\r\n\t\t\t\t\t\t\tlabel='Clear All Tags'\r\n\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\tcolor='error'\r\n\t\t\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\t\t\tsx={{ transform: 'scale(0.8)' }}\r\n\t\t\t\t\t\t\tonClick={clearAllSelectedTags}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<ChipContainer>\r\n\t\t\t\t\t{tags.length > 0 &&\r\n\t\t\t\t\t\ttags.map((tag) => (\r\n\t\t\t\t\t\t\t<Chip\r\n\t\t\t\t\t\t\t\tlabel={tag}\r\n\t\t\t\t\t\t\t\tkey={tag}\r\n\t\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\t\t\t\t\ttransition: 'all 200ms',\r\n\t\t\t\t\t\t\t\t\t...(selectedTags.includes(tag)\r\n\t\t\t\t\t\t\t\t\t\t? chitActiveStyle\r\n\t\t\t\t\t\t\t\t\t\t: {}),\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tsize='small'\r\n\t\t\t\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\t\t\t\tonClick={() => handleSelectTag(tag)}\r\n\t\t\t\t\t\t\t\tonDelete={\r\n\t\t\t\t\t\t\t\t\t!selectedTags.includes(tag)\r\n\t\t\t\t\t\t\t\t\t\t? undefined\r\n\t\t\t\t\t\t\t\t\t\t: handleDeleteTag(tag)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t</ChipContainer>\r\n\t\t\t</CtaBox>\r\n\t\t);\r\n\t};\r\n\tconsole.log(resources);\r\n\treturn (\r\n\t\t<Main>\r\n\t\t\t<Typography variant='h6' noWrap>\r\n\t\t\t\tResources{' '}\r\n\t\t\t\t<Typography variant='caption' component='span'>\r\n\t\t\t\t\tthat will blow your mind!\r\n\t\t\t\t</Typography>\r\n\t\t\t</Typography>\r\n\t\t\t<Divider variant='fullWidth' />\r\n\t\t\t<Container>\r\n\t\t\t\t<ResourceContainer id='resources'>\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{resources?.length > 0 &&\r\n\t\t\t\t\t\t\tresources.map((resource) => (\r\n\t\t\t\t\t\t\t\t<div>{resource.name}</div>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t</>\r\n\t\t\t\t\t<Stack spacing={2}>\r\n\t\t\t\t\t\t<Pagination\r\n\t\t\t\t\t\t\tcount={page.total}\r\n\t\t\t\t\t\t\tpage={page.page}\r\n\t\t\t\t\t\t\tonChange={handlePageChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Stack>\r\n\t\t\t\t</ResourceContainer>\r\n\t\t\t\t<CallToActions />\r\n\t\t\t</Container>\r\n\t\t</Main>\r\n\t);\r\n};\r\n\r\nconst Main = styled(Box)({\r\n\twidth: '100%',\r\n});\r\n\r\nconst Container = styled(Box)({\r\n\twidth: '100%',\r\n\theight: '100%',\r\n\tdisplay: 'flex',\r\n\tmarginTop: '1em',\r\n\tgap: '1em',\r\n\t'@media(max-width: 800px)': {\r\n\t\tflexDirection: 'column-reverse',\r\n\t},\r\n});\r\n\r\nconst ResourceContainer = styled(List)({\r\n\twidth: '65%',\r\n\tpadding: '0.5em',\r\n\t'@media(max-width: 800px)': {\r\n\t\twidth: '100%',\r\n\t},\r\n});\r\n\r\nconst CtaBox = styled(Box)({\r\n\twidth: '35%',\r\n\tborderRadius: '8px',\r\n\tbackground: '#e3f2fd',\r\n\tpadding: '0.5em',\r\n\theight: 'fit-content',\r\n\t'@media(max-width: 800px)': {\r\n\t\twidth: '100%',\r\n\t},\r\n});\r\n\r\nconst ChipContainer = styled(Stack)({\r\n\tflexWrap: 'wrap',\r\n\tflexDirection: 'row',\r\n\tgap: 2,\r\n\tmarginTop: 4,\r\n\tmaxHeight: '280px',\r\n\toverflow: 'auto',\r\n\tpadding: 1,\r\n\t'&::-webkit-scrollbar': {\r\n\t\twidth: '0.2em',\r\n\t},\r\n\t'&::-webkit-scrollbar-track': {\r\n\t\tboxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)',\r\n\t\twebkitBoxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)',\r\n\t},\r\n\t'&::-webkit-scrollbar-thumb': {\r\n\t\tbackgroundColor: 'rgba(0,0,0,.1)',\r\n\t\tborderRadius: '4px',\r\n\t},\r\n});\r\n\r\nexport default Resources;\r\n"],"names":["readNotifications","localStorage","getItem","JSON","parse","Data","resourceUtility","getResources","page","limit","tags","search","resources","allResources","console","log","filter","resource","searchRegExp","RegExp","test","name","description","url","length","find","tag","includes","slice","getSingleResource","URL","hostname","split","shift","getTotalPages","Math","ceil","tagUtility","getTags","allTags","notificationUtility","getAllNotification","allNotifications","notification","read","readNotification","id","Promise","reject","updateReadNotifications","notificationId","Error","noti","push","setItem","stringify","Main","styled","Box","width","Container","height","display","marginTop","gap","flexDirection","ResourceContainer","List","padding","CtaBox","borderRadius","background","ChipContainer","Stack","flexWrap","maxHeight","overflow","boxShadow","webkitBoxShadow","backgroundColor","useState","setTags","setResources","total","setPage","selectedTags","setSelectedTags","setSearch","useMemo","handleFetchResources","data","useEffect","handleGetTotalPages","prev","handleFetchTags","handleDeleteTag","item","clearAllSelectedTags","chitActiveStyle","CallToActions","TextField","type","variant","fullWidth","label","placeholder","value","onChange","e","target","InputProps","endAdornment","Search","sx","mb","Divider","Typography","mt","fontWeight","Category","fontSize","component","Chip","size","color","transform","onClick","map","cursor","transition","handleSelectTag","onDelete","undefined","noWrap","spacing","Pagination","count","event"],"sourceRoot":""}